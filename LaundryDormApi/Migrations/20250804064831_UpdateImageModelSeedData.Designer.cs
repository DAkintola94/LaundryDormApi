// <auto-generated />
using System;
using LaundryDormApi.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaundryDormApi.Migrations
{
    [DbContext(typeof(LaundryDormDbContext))]
    [Migration("20250804064831_UpdateImageModelSeedData")]
    partial class UpdateImageModelSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.AdviceSet", b =>
                {
                    b.Property<int>("PosterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PosterId"));

                    b.Property<string>("AdminEmail")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("AdminInspectionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InspectedByAdmin")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PosterName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("PosterId");

                    b.HasIndex("CategoryID");

                    b.HasIndex("StatusId");

                    b.ToTable("Advice");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.AdviceStatus", b =>
                {
                    b.Property<int>("AdviceStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AdviceStatusId"));

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AdviceStatusId");

                    b.ToTable("AdviceStatus");

                    b.HasData(
                        new
                        {
                            AdviceStatusId = 1,
                            StatusDescription = "Ikke inspisert"
                        },
                        new
                        {
                            AdviceStatusId = 2,
                            StatusDescription = "Inspisert"
                        });
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Forbedring"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Vedlikehold"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Feil"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Annet"
                        });
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.ImageModel", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ImageDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageExtension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<long?>("ImageSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("ImageId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("a1b2c3d4-e5f6-7890-abcd-ef1234567890"),
                            ImageDescription = "Siemen machine picture",
                            ImageExtension = ".jpg",
                            ImageName = "washing machine",
                            ImagePath = "https://localhost:7054/ServerImage/Siemen.jpg",
                            ImageSizeInBytes = 337200L
                        },
                        new
                        {
                            ImageId = new Guid("b7e2a1c4-3f6a-4e2e-9b7a-2c8e1d4f5a6b"),
                            ImageDescription = "Balay washing machine",
                            ImageExtension = ".jpg",
                            ImageName = "BalayMachine",
                            ImagePath = "https://localhost:7054/ServerImage/Balay.jpg",
                            ImageSizeInBytes = 380876L
                        });
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.LaundrySession", b =>
                {
                    b.Property<int>("LaundrySessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LaundrySessionId"));

                    b.Property<string>("LaundryEndTime")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LaundrySessionEndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LaundrySessionStartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("LaundryStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReservationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly?>("ReservedDate")
                        .HasColumnType("date");

                    b.Property<int>("TimePeriodId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasColumnType("longtext");

                    b.HasKey("LaundrySessionId");

                    b.HasIndex("LaundryStatusID");

                    b.HasIndex("MachineId");

                    b.HasIndex("TimePeriodId");

                    b.ToTable("Laundry");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.LaundryStatusState", b =>
                {
                    b.Property<int>("LaundryStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LaundryStatusID"));

                    b.Property<string>("StatusDescription")
                        .HasColumnType("longtext");

                    b.HasKey("LaundryStatusID");

                    b.ToTable("LaundryStatus");

                    b.HasData(
                        new
                        {
                            LaundryStatusID = 1,
                            StatusDescription = "Aktiv"
                        },
                        new
                        {
                            LaundryStatusID = 2,
                            StatusDescription = "Utløpt"
                        },
                        new
                        {
                            LaundryStatusID = 3,
                            StatusDescription = "Service pågår!"
                        },
                        new
                        {
                            LaundryStatusID = 4,
                            StatusDescription = "Reservert"
                        },
                        new
                        {
                            LaundryStatusID = 5,
                            StatusDescription = "Kansellert"
                        });
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.MachineModel", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MachineId"));

                    b.Property<Guid>("ImageFK_ID")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsOperational")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("MachineName")
                        .HasColumnType("longtext");

                    b.Property<string>("ModelName")
                        .HasColumnType("longtext");

                    b.HasKey("MachineId");

                    b.HasIndex("ImageFK_ID");

                    b.ToTable("Machine");

                    b.HasData(
                        new
                        {
                            MachineId = 1,
                            ImageFK_ID = new Guid("a1b2c3d4-e5f6-7890-abcd-ef1234567890"),
                            IsOperational = true,
                            Location = "Laundry room 1",
                            MachineName = "Siemen",
                            ModelName = "washing machine"
                        },
                        new
                        {
                            MachineId = 2,
                            ImageFK_ID = new Guid("b7e2a1c4-3f6a-4e2e-9b7a-2c8e1d4f5a6b"),
                            IsOperational = true,
                            Location = "Laundry room 2",
                            MachineName = "Samsung washing machine",
                            ModelName = "WW90CGC04DAH model"
                        });
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.TimePeriodModel", b =>
                {
                    b.Property<int>("PeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PeriodId"));

                    b.Property<TimeSpan>("End")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("Start")
                        .HasColumnType("time(6)");

                    b.HasKey("PeriodId");

                    b.ToTable("TimeStamp");

                    b.HasData(
                        new
                        {
                            PeriodId = 1,
                            End = new TimeSpan(0, 12, 0, 0, 0),
                            Start = new TimeSpan(0, 7, 0, 0, 0)
                        },
                        new
                        {
                            PeriodId = 2,
                            End = new TimeSpan(0, 17, 0, 0, 0),
                            Start = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            PeriodId = 3,
                            End = new TimeSpan(0, 23, 0, 0, 0),
                            Start = new TimeSpan(0, 17, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.UpdateCountModel", b =>
                {
                    b.Property<int>("UpdateCountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UpdateCountId"));

                    b.Property<int?>("AmountOfCount")
                        .HasColumnType("int");

                    b.HasKey("UpdateCountId");

                    b.ToTable("UpdatedLaundryCount");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.AdviceSet", b =>
                {
                    b.HasOne("LaundryDormApi.Model.DomainModel.Category", "CategoryModel")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaundryDormApi.Model.DomainModel.AdviceStatus", "StatusModel")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryModel");

                    b.Navigation("StatusModel");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.LaundrySession", b =>
                {
                    b.HasOne("LaundryDormApi.Model.DomainModel.LaundryStatusState", "LaundryStatus")
                        .WithMany()
                        .HasForeignKey("LaundryStatusID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LaundryDormApi.Model.DomainModel.MachineModel", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LaundryDormApi.Model.DomainModel.TimePeriodModel", "TimePeriod")
                        .WithMany()
                        .HasForeignKey("TimePeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaundryStatus");

                    b.Navigation("Machine");

                    b.Navigation("TimePeriod");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.MachineModel", b =>
                {
                    b.HasOne("LaundryDormApi.Model.DomainModel.ImageModel", "Image")
                        .WithMany()
                        .HasForeignKey("ImageFK_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });
#pragma warning restore 612, 618
        }
    }
}
