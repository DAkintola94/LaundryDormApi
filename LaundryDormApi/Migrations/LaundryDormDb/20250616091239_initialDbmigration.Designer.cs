// <auto-generated />
using System;
using LaundryDormApi.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaundryDormApi.Migrations.LaundryDormDb
{
    [DbContext(typeof(LaundryDormDbContext))]
    [Migration("20250616091239_initialDbmigration")]
    partial class initialDbmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.AdviceSet", b =>
                {
                    b.Property<int>("PosterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PosterId"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CategoryType")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PosterName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PosterId");

                    b.HasIndex("CategoryID");

                    b.ToTable("Advice");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Forbedring"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Vedlikehold"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Feil"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Annet"
                        });
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.ImageModel", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ImageDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageExtension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<long?>("ImageSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("ImageId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.LaundrySession", b =>
                {
                    b.Property<int>("LaundrySessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LaundrySessionId"));

                    b.Property<string>("AppUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("LaundryStatusDescription")
                        .HasColumnType("longtext");

                    b.Property<int?>("LaundryStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReservationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SessionEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SessionStart")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("LaundrySessionId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("LaundryStatusID");

                    b.HasIndex("MachineId");

                    b.ToTable("Laundry");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.LaundryStatusState", b =>
                {
                    b.Property<int>("LaundryStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LaundryStatusID"));

                    b.Property<string>("LaundryStatusStateName")
                        .HasColumnType("longtext");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("longtext");

                    b.HasKey("LaundryStatusID");

                    b.ToTable("LaundryStatus");

                    b.HasData(
                        new
                        {
                            LaundryStatusID = 1,
                            StatusDescription = "Pågår"
                        },
                        new
                        {
                            LaundryStatusID = 2,
                            StatusDescription = "Ferdig"
                        },
                        new
                        {
                            LaundryStatusID = 3,
                            StatusDescription = "Stoppet!"
                        },
                        new
                        {
                            LaundryStatusID = 4,
                            StatusDescription = "Service pågår!"
                        },
                        new
                        {
                            LaundryStatusID = 5,
                            StatusDescription = "Service ferdig!"
                        });
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.MachineModel", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MachineId"));

                    b.Property<Guid>("ImageFK_ID")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsOperational")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("MachineName")
                        .HasColumnType("longtext");

                    b.Property<string>("ModelName")
                        .HasColumnType("longtext");

                    b.HasKey("MachineId");

                    b.HasIndex("ImageFK_ID");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.MaintenanceLogModel", b =>
                {
                    b.Property<int>("MaintenanceLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MaintenanceLogId"));

                    b.Property<string>("IssueDescription")
                        .HasColumnType("longtext");

                    b.Property<int>("LaundryStatusIdentifier")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReportedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SolvedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TechnicianName")
                        .HasColumnType("longtext");

                    b.HasKey("MaintenanceLogId");

                    b.HasIndex("LaundryStatusIdentifier");

                    b.HasIndex("MachineId");

                    b.ToTable("MaintenanceLog");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.ReservationDto", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReservationID"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReservationDate")
                        .HasColumnType("date");

                    b.Property<string>("ReservationHolder")
                        .HasColumnType("longtext");

                    b.Property<string>("ReservationTime")
                        .HasColumnType("longtext");

                    b.HasKey("ReservationID");

                    b.HasIndex("MachineId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.AdviceSet", b =>
                {
                    b.HasOne("LaundryDormApi.Model.DomainModel.Category", "CategoryModel")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryModel");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.LaundrySession", b =>
                {
                    b.HasOne("LaundryDormApi.Model.DomainModel.ApplicationUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("LaundryDormApi.Model.DomainModel.LaundryStatusState", "LaundryStatus")
                        .WithMany()
                        .HasForeignKey("LaundryStatusID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LaundryDormApi.Model.DomainModel.MachineModel", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AppUser");

                    b.Navigation("LaundryStatus");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.MachineModel", b =>
                {
                    b.HasOne("LaundryDormApi.Model.DomainModel.ImageModel", "Image")
                        .WithMany()
                        .HasForeignKey("ImageFK_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.MaintenanceLogModel", b =>
                {
                    b.HasOne("LaundryDormApi.Model.DomainModel.LaundryStatusState", "StatusState")
                        .WithMany()
                        .HasForeignKey("LaundryStatusIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaundryDormApi.Model.DomainModel.MachineModel", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Machine");

                    b.Navigation("StatusState");
                });

            modelBuilder.Entity("LaundryDormApi.Model.DomainModel.ReservationDto", b =>
                {
                    b.HasOne("LaundryDormApi.Model.DomainModel.MachineModel", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });
#pragma warning restore 612, 618
        }
    }
}
